#!/bin/bash

# Update system packages
echo "Updating system packages..."
sudo apt update && sudo apt upgrade -y

# Install Apache
echo "Installing Apache..."
sudo apt install apache2 -y
sudo systemctl enable apache2
sudo systemctl start apache2

# Install MySQL/MariaDB
echo "Installing MySQL/MariaDB..."
sudo apt install mysql-server -y
sudo mysql_secure_installation

# Install PHP
echo "Installing PHP and required modules..."
sudo apt install php libapache2-mod-php php-mysql -y

# Configure Apache to prioritize PHP files
echo "Configuring Apache to prioritize PHP files..."
sudo sed -i 's/DirectoryIndex .*/DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm/' /etc/apache2/mods-enabled/dir.conf
sudo systemctl restart apache2

# Test PHP installation
echo "Creating a PHP info file..."
echo "<?php phpinfo(); ?>" | sudo tee /var/www/html/info.php > /dev/null

# Setup MySQL database and user
read -p "Enter MySQL database name: " dbname
read -p "Enter MySQL username: " dbuser
read -sp "Enter MySQL user password: " dbpass
echo

echo "Creating MySQL database and user..."
sudo mysql -e "CREATE DATABASE ${dbname};"
sudo mysql -e "CREATE USER '${dbuser}'@'localhost' IDENTIFIED BY '${dbpass}';"
sudo mysql -e "GRANT ALL PRIVILEGES ON ${dbname}.* TO '${dbuser}'@'localhost';"
sudo mysql -e "FLUSH PRIVILEGES;"

# Test PHP-MySQL integration
echo "Creating a PHP-MySQL test file..."
echo "<?php
\$servername = 'localhost';
\$username = '${dbuser}';
\$password = '${dbpass}';
\$dbname = '${dbname}';
\$conn = new mysqli(\$servername, \$username, \$password, \$dbname);
if (\$conn->connect_error) {
    die('Connection failed: ' . \$conn->connect_error);
}
echo 'Connected successfully';
?>" | sudo tee /var/www/html/testdb.php > /dev/null

# Optional: Install phpMyAdmin
read -p "Do you want to install phpMyAdmin? (y/n): " install_phpmyadmin
if [ "$install_phpmyadmin" == "y" ]; then
    echo "Installing phpMyAdmin..."
    sudo apt install phpmyadmin -y
    sudo phpenmod mysqli
    sudo systemctl restart apache2
fi

# Optional: Secure Apache with SSL using Let's Encrypt
read -p "Do you want to enable SSL with Let's Encrypt? (y/n): " enable_ssl
if [ "$enable_ssl" == "y" ]; then
    echo "Installing Certbot and enabling SSL..."
    sudo apt install certbot python3-certbot-apache -y
    sudo certbot --apache
fi

# Final cleanup
echo "Cleaning up test files..."
sudo rm /var/www/html/info.php

# Enable useful Apache modules
echo "Enabling Apache modules..."
sudo a2enmod rewrite headers ssl
sudo systemctl restart apache2

# Summary
echo "LAMP stack setup complete!"
echo "Access the test PHP-MySQL file at: http://your_server_ip/testdb.php"
echo "Remove testdb.php after verification for security purposes."

exit 0
